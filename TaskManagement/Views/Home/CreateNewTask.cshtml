@model TaskManagement.Model.TaskInfo

@{
    Layout = "";
}


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link href="~/CSS/index.css" rel="stylesheet" type="text/css" />
    <script src="@("https://unpkg.com/@microsoft/teams-js@1.4.1/dist/MicrosoftTeams.min.js")"></script>
    @*<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">*@
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script src="https://statics.teams.microsoft.com/sdk/v1.5.2/js/MicrosoftTeams.min.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <style>
        .select2-container {
            width:inherit !important;            
        }
        .select2-container--default .select2-results__option--highlighted.select2-results__option--selectable{
            background-color:whitesmoke !important;
            color :black !important;
        }
        .select2-container--default .select2-selection--multiple {
            background-color: whitesmoke !important;
            color: black !important;
            border:none;
        }
        .assigned{
            padding-right:1rem;
        }
        
    </style>
   
    <title>Screen</title>
    <script>
        microsoftTeams.initialize();

        var username = "";
        microsoftTeams.getContext(function (context) {
            username = context.upn;
        });

        var empty = true;
        $('input[type="text"]').each(function () {
            if ($(this).val() != "") {

                empty = false;
                return false;
            }
        });

        function SendAdaptiveCard() {
            debugger;
            var isValid = true;
            $('#title,#description,#startDate,#dueDate,#taskAssignedTo').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }

            });
            if (isValid == false) {
                debugger;
                e.preventDefault();
                return false;
            }

            var action = '@ViewBag.action';
            var parentTaskName = '@ViewBag.parentTaskName';
            var callFromTab='@ViewBag.callFromTab';

            let taskInfo = {
                taskNumber: $('#taskNumber').val(),
                taskAssignedTo: $('#taskAssignedTo').val(),
                status: $('#status').val(),
                priority: $('#priority').val(),
                title: $('#title').val(),
                description: $('#description').val(),
                startDate: $('#startDate').val(),
                dueDate: $('#dueDate').val(),
                //attachement: $('#attachement').val(),
                subscribers: $('#subscribers').val(),
                dependentOn: $('#depemdemtOn').val(),
                blocks: $('#blocks').val(),
                activityComment: $('#activityComment').val(),
                action: action == '' ? "sendAdaptiveCard" : action,
                parentId: action == '' ? '' : parentTaskName,
                userName: username,
            };

            taskInfo.card = "";
            taskInfo.height = "";
            taskInfo.width = "";

            if (callFromTab =="tabload") {
                    $.ajax({
                    type: 'POST',
                        url: '@Url.Action("SaveOrUpdateTask", "Home")',
                        data: taskInfo
                    });
               }
            microsoftTeams.tasks.submitTask(taskInfo);
            return true;
        };

    </script>
    <script type="text/javascript">
        $(function () {
            $("#taskAssignedTo").select2();
            $("#subscribers").select2();
        });
    </script>
</head>

<body>
    <div class="">
        <div class="">
            <div class="mb">
                @*<div class="tk-no" id="taskNumber">@ViewBag.newTaskID</div>*@
                <input type="text" class="tk-no" id="taskNumber" value="@ViewBag.newTaskID" disabled>
                <div class="input-grp">
                    @*    <input type="text" class="alias" id="taskAssignedTo" required />*@
                </div>
                <div class="drp-down">
                    <div class="drp-text">Owner</div>
                    <div class="assigned">
                        @Html.DropDownListFor(x => Model.taskAssignedTo, new SelectList(Model.assignedToList, "Value", "Text"), htmlAttributes: new { @class = "cs", @id = "taskAssignedTo" })
                    </div>
                </div>
                <div class="drp-down">
                    <div class="drp-text">Status</div>

                    @Html.DropDownListFor(x => Model.status, new SelectList(Model.statusList, "Value", "Text"), htmlAttributes: new { @class = "cs", @id = "status" })

                    <span class="sel-chev"></span>
                </div>
                <div class="drp-down2">
                    <div class="drp-text">Priority</div>

                    @Html.DropDownListFor(x => Model.priority, new SelectList(Model.priorityList, "Value", "Text"), htmlAttributes: new { @class = "cs", @id = "priority" })
                    <span class="sel-chev"></span>
                </div>
                <div class="form-group fg">
                    <label for="title" class="title">Title</label>
                    @Html.TextBoxFor(model => model.title, htmlAttributes: new { @class = "form-control", @id = "title", maxlength = "30" })

                    @*<input type="text" class="form-control" id="title" maxlength="30" value="@Model.title">*@
                </div>
                <div class="form-group fg">
                    <label for="title-desc" class="description">Description</label>
                    @Html.TextAreaFor(model => model.description, htmlAttributes: new { @class = "form-control title-desc", @id = "description" })
                    @Html.ValidationMessageFor(model => model.title)
                    @*<textarea class="form-control title-desc" id="description" required>@Model.description</textarea>*@
                </div>
                <div class="drp-down-date">
                    <div class="drp-text">Start date</div>
                    @Html.EditorFor(model => model.startDate, "", new { @type = "date", @class = "date", id = "startDate" })
                    @Html.ValidationMessageFor(model => model.startDate)

                    @*<input type="date" id="startDate" class="form-control date" value="@Model.startDate" />*@
                    @*<span class="datee"></span>*@
                </div>
                <div class="drp-down-date2">
                    <div class="drp-text">Due date</div>
                    @Html.EditorFor(model => model.dueDate, "", new { @type = "date", @class = "date", id = "dueDate" })
                    @Html.ValidationMessageFor(model => model.dueDate)

                    @*<input type="date" id="dueDate" class="form-control date" value="@Model.dueDate" />*@
                    @*<span class="datee"></span>*@
                </div>
                <div class="form-group">
                    @*<div class="drp-text">Attachment</div>*@
                    <label for="attachement" class="Attach">Add attachment</label>
                    <input type="file" id="attachement" name="attachement">
                </div>
                <div class="form-group">

                    <div class="sm-10">
                        @*<span class="Subscribers-icon"></span>*@
                        <label for="Subscribers" class="col-form-label col-form-label-sm subscribers">Subscribers</label>

                        @Html.ListBoxFor(x => Model.subscribers, new MultiSelectList(Model.subscribersList, "Value", "Text"), htmlAttributes: new { @class = "form-control selectpicker", @id = "subscribers", multiple = "multiple", width="100% !important" })
                    </div>
                </div>
                <div class="sm-10">
                    <label for="Depends" class="Depends">Depends On</label>
                    @Html.ListBoxFor(x => Model.dependentOn, new MultiSelectList(Model.dependentOnList, "Value", "Text"), htmlAttributes: new { @class = "form-control selectpicker", @id = "depemdemtOn", multiple = "multiple" })
                </div>
                <div class="sm-10">
                    <label for="Depends" class="block">Blocks</label>
                    @Html.ListBoxFor(x => Model.blocks, new MultiSelectList(Model.blocksList, "Value", "Text"), htmlAttributes: new { @class = "form-control selectpicker", @id = "blocks", multiple = "multiple" })
                </div>
                <div class="activity">
                    <span class="activity-icon"></span>
                    <span class="act">Activity</span>
                    <span class="hide">Hide Details</span>

                    <div class="media customMedia">
                        <img src="https://oit.ua.edu/wp-content/uploads/2020/03/Microsoft_Teams_256x256.png"
                             class="align-self-center letter-img" alt="img">
                        <div class="media-body mr-2 mb-2">
                            @*<input type="text" class="form-control comment" id="block" placeholder="Write comment here...">*@
                            <textarea class="form-control comment" id="activityComment" placeholder="Write comment here..."></textarea>
                        </div>
                    </div>
                    @if (Model.activity != null && Model.activity.Count > 0)
                    {
                        @for (int count = 0; count < Model.activity.Count; count++)
                        {
                            <div class="media customMedia ml-3">
                                <div class="media-body mr-2 mb-2">
                                    @*<input type="text" class="form-control comment" id="block" placeholder="Write comment here...">*@
                                    <textarea class="form-control comment2" id="oldactivityComment-@count" placeholder="Write comment here...">@Model.activity[count].ActivityCreatedBy : @Model.activity[count].ActivityCreatedTime &#13;&#10; @Model.activity[count].Comments
                                </textarea>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return SendAdaptiveCard()">Save Task</button>
            </div>
        </div>
    </div>
</body>

</html>